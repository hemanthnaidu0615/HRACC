@model HRACCPortal.Models.ManageChequesViewModel
@{
    ViewBag.Title = "Manage Cheques";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container container-xxl mt-5">
        <div class="card shadow-lg rounded-4 border-0">
            <div class="card-header bg-light d-flex flex-column flex-md-row justify-content-between align-items-center py-4">
                <h3 class="card-title text-primary mb-2 mb-md-0">Manage Cheques for Invoice <strong>@Model.Payment.InvoiceNumber</strong></h3>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary rounded-pill">← Back to Payments</a>
            </div>

            <div class="card-body p-4">

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success rounded-pill px-4 py-2">@TempData["Success"]</div>
                }
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger rounded-pill px-4 py-2">@TempData["Error"]</div>
                }

                <div class="row mb-4">
                    <div class="col-md-3 mb-3">
                        <label class="fw-bold text-muted">Invoice Amount:</label>
                        <div class="fs-6 text-dark">@Model.Payment.InvoiceAmount</div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label class="fw-bold text-muted">Amount Paid:</label>
                        <div class="fs-6 text-dark">@Model.Payment.AmountPaid</div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label class="fw-bold text-muted">Balance:</label>
                        <div class="fs-6 text-dark">@Model.Payment.BalanceAmount</div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label class="fw-bold text-muted">Status:</label>
                        <div>
                            @{
                                var status = Model.Payment.Status;
                                string badgeClass = status == "Received" ? "bg-success" :
                                                    status == "Partially Received" ? "bg-info" : "bg-secondary";
                                string icon = status == "Received" ? "bi-check-circle-fill" :
                                              status == "Partially Received" ? "bi-hourglass-split" : "bi-exclamation-circle";
                            }
                            <span class="badge @badgeClass text-white rounded-pill px-3 py-2 d-inline-flex align-items-center gap-2 shadow-sm">
                                <i class="bi @icon"></i> @status
                            </span>
                        </div>
                    </div>
                </div>

                @if (Model.Payment.Status != "Received")
                {
                    using (Html.BeginForm("AddOrUpdateCheque", "PaymentsReceived", FormMethod.Post, new { id = "chequeForm" }))
                    {
                        @Html.HiddenFor(m => m.NewCheque.ChequeId)
                        @Html.HiddenFor(m => m.NewCheque.PaymentId)

                        <div class="row g-4 mb-4">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.NewCheque.ChequeNumber, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.NewCheque.ChequeNumber, new { @class = "form-control rounded-pill shadow-sm" })
                                @Html.ValidationMessageFor(m => m.NewCheque.ChequeNumber, "", new { @class = "text-danger small" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.NewCheque.ChequeAmount, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.NewCheque.ChequeAmount, new { @class = "form-control rounded-pill shadow-sm", type = "number", step = "0.01" })
                                @Html.ValidationMessageFor(m => m.NewCheque.ChequeAmount, "", new { @class = "text-danger small" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.NewCheque.DateReceived, new { @class = "form-label fw-semibold" })
                                @Html.TextBoxFor(m => m.NewCheque.DateReceived, "{0:yyyy-MM-dd}", new { @class = "form-control rounded-pill shadow-sm", type = "date" })
                                @Html.ValidationMessageFor(m => m.NewCheque.DateReceived, "", new { @class = "text-danger small" })
                            </div>
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <button type="button" class="btn btn-light rounded-pill px-4" onclick="resetForm()">Cancel</button>
                            <button type="submit" class="btn btn-primary rounded-pill px-4 shadow-sm">💾 Save Cheque</button>
                        </div>
                    }
                }

                <div class="separator my-5"></div>

                <h4 class="mb-4 text-primary">🧾 Existing Cheques</h4>
                <div class="table-responsive">
                    <table class="table table-hover table-borderless align-middle shadow-sm rounded-3">
                        <thead class="bg-light text-muted">
                            <tr>
                                <th>C#</th>
                                <th>Cheque Number</th>
                                <th>Amount</th>
                                <th>Date Received</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var cheque in Model.Cheques)
                            {
                                <tr id="row-@cheque.ChequeId">
                                    <form method="post" action="@Url.Action("AddOrUpdateCheque", "PaymentsReceived")">
                                        @Html.Hidden("NewCheque.ChequeId", cheque.ChequeId)
                                        @Html.Hidden("NewCheque.PaymentId", Model.NewCheque.PaymentId)

                                    <td>@cheque.CNumber</td>

                                    <td>
                                        <input type="text" name="NewCheque.ChequeNumber" class="form-control form-control-sm rounded-pill" value="@cheque.ChequeNumber" />
                                    </td>
                                    <td>
                                        <input type="number" step="0.01" name="NewCheque.ChequeAmount" class="form-control form-control-sm rounded-pill" value="@cheque.ChequeAmount" />
                                    </td>
                                    <td>
                                        <input type="date" name="NewCheque.DateReceived" class="form-control form-control-sm rounded-pill"
                                               value="@(cheque.DateReceived?.ToString("yyyy-MM-dd"))" />
                                    </td>
                                    <td>
                                        <button type="submit" class="btn btn-sm btn-success rounded-circle" title="Save">
                                            <i class="bi bi-check-lg"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-light rounded-circle" title="Cancel" onclick="location.reload();">
                                            <i class="bi bi-x-lg"></i>
                                        </button>
                                    </td>
                                    </form>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Cheque Modal -->
<div class="modal fade" id="editChequeModal" tabindex="-1" aria-labelledby="editChequeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-4 shadow">
            <form method="post" action="@Url.Action("AddOrUpdateCheque", "PaymentsReceived")">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Cheque</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="Modal_ChequeId" name="NewCheque.ChequeId" />
                    <input type="hidden" id="Modal_PaymentId" name="NewCheque.PaymentId" value="@Model.NewCheque.PaymentId" />

                    <div class="mb-3">
                        <label class="form-label fw-semibold text-muted">Cheque Number</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="Modal_ChequeNumber" name="NewCheque.ChequeNumber" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold text-muted">Cheque Amount</label>
                        <input type="number" step="0.01" class="form-control rounded-pill shadow-sm" id="Modal_ChequeAmount" name="NewCheque.ChequeAmount" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold text-muted">Date Received</label>
                        <input type="date" class="form-control rounded-pill shadow-sm" id="Modal_DateReceived" name="NewCheque.DateReceived" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light rounded-pill" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary rounded-pill">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {
    <!-- jQuery (optional, only needed for resetForm and tooltips) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Bootstrap 4 JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
            let editModalInstance;
            function resetForm() {
                document.getElementById("chequeForm").reset();
                document.getElementById("NewCheque_ChequeId")?.value = 0;
            }

            // Optional: Bootstrap tooltip init
            document.addEventListener("DOMContentLoaded", function () {
                const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                    new bootstrap.Tooltip(tooltipTriggerEl);
                });
            });


        document.addEventListener("DOMContentLoaded", function () {
            // Show success alert
            @if (TempData["SweetAlertMessage"] != null)
            {
                <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: '@TempData["SweetAlertMessage"]',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK'
                    });
                </text>
            }

            // Optional: show error alert
            @if (TempData["Error"] != null)
            {
                <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops!',
                        text: '@TempData["Error"]',
                        confirmButtonColor: '#d33',
                        confirmButtonText: 'Close'
                    });
                </text>
            }
        });
    </script>


}

