@{
    bool isReadOnly = ViewBag.IsReadOnly ?? false;
}
﻿@{
    ViewBag.Title = "Edit Timesheet";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container container-xxl">
        <div class="card">
            <div class="card-header border-0 pt-6">
                <div class="card-title">
                    <h2>Edit Timesheet</h2>
                </div>
            </div>
            <div class="card-body">
                <form id="timesheetForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Month:</label>
                                <input type="text" id="month" class="form-control" @(isReadOnly ? "readonly" : "")>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Year:</label>
                                <input type="text" id="year" class="form-control" @(isReadOnly ? "readonly" : "")>
                            </div>
                        </div>
                    </div>

                    <div id="daysTable" class="mt-4">
                        <h3 class="mb-3">Edit Timesheet Details</h3>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>SOW Deliverable</th>
                                    <th>Description</th>
                                    <th>Hours</th>
                                    <th>OT Hours</th>
                                </tr>
                            </thead>
                            <tbody id="daysBody"></tbody>
                        </table>
                    </div>

                    <div class="text-end">
                        <button type="button" id="cancelButton" class="btn btn-secondary">Cancel</button>
                        <button type="submit" id="saveButton" class="btn btn-success">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            var timesheetId = '@ViewBag.TimesheetId';

            function loadTimesheetDetails() {
                $.get("/Timesheet/GetTimesheetDetails", { timesheetId: timesheetId }, function (response) {
                    if (!response.success) {
                        alert(response.message);
                        return;
                    }

                    $("#month").val(response.month); // Set month name instead of number
                    $("#year").val(response.year);

                    $("#daysBody").empty();
                    response.details.forEach((detail, index) => {
                        $("#daysBody").append(`
                        <tr>
                            <td>${detail.WorkDate}</td>
                             <td><input type="text" name="details[${index}].SOWDeliverableNumber" class="form-control" value="${detail.SOWDeliverableNumber}" / @(isReadOnly ? "readonly" : "")></td>
                            <td><input type="text" name="details[${index}].Description" class="form-control" value="${detail.Description}" / @(isReadOnly ? "readonly" : "")></td>
                            <td><input type="number" name="details[${index}].Hours" class="form-control" value="${detail.Hours}" / @(isReadOnly ? "readonly" : "")></td>
                             <td><input type="number" name="details[${index}].OTHours" class="form-control" value="${detail.OTHours}" / @(isReadOnly ? "readonly" : "")></td>
                        </tr>
                    `);
                    });

                    // Append total summary row
                    let totalHours = response.details.reduce((sum, item) => sum + parseFloat(item.Hours || 0), 0);
                    $("#daysBody").append(`
                    <tr>
                        <td></td>
                        <td><strong>Total: ${totalHours}</strong><br><strong>YTD Total: 0</strong><br><strong>YTD Hours Left: 2160</strong></td>
                        <td></td>
                    </tr>
                `);
                });
            }

            loadTimesheetDetails();

            $("#cancelButton").click(function () {
                window.location.href = "/Timesheet/Index";
            });

            $("#timesheetForm").submit(function (e) {
                e.preventDefault();

                var details = [];
                $("#daysBody tr").each(function (index, row) {
                    var $inputs = $(row).find("input");

                    if ($inputs.length === 0) return; // Skip rows without input fields (like total row)

                    var dateText = $(row).find("td:first").text().trim();
                    var sowDeliverable = $(row).find('input[name$=".SOWDeliverableNumber"]').val().trim();
                    var description = $(row).find('input[name$=".Description"]').val().trim();
                    var hours = $(row).find('input[name$=".Hours"]').val().trim();
                    var otHours = $(row).find('input[name$=".OTHours"]').val().trim();
                    if (dateText && description !== "" && hours !== "") {
                        details.push({
                            WorkDate: dateText,
                            SOWDeliverableNumber: sowDeliverable,
                            Description: description,
                            Hours: parseFloat(hours),
                            OTHours: parseFloat(otHours) || 0
                        });
                    }
                });


                $.ajax({
                    url: "/Timesheet/UpdateTimesheet",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ timesheetId: timesheetId, details: details }),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: 'Timesheet updated successfully!',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.href = "/Timesheet/Index";
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: response.message
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating timesheet:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error',
                            text: 'Failed to update timesheet. Please try again later.'
                        });
                    }
                });
            });
        });

    </script>
}

@if (!isReadOnly)
{
    <button type="submit" class="btn btn-primary">Save</button>
}